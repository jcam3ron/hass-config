---
adaptive_lighting:
  - name: "Living Room"
    lights:
      - light.living_area_downlights
      - light.stand_lamp
    prefer_rgb_color: false
    transition: 5  # seconds
    initial_transition: 5  # seconds
    interval: 90  # seconds
    min_brightness: 20  # percentage
    max_brightness: 100  # percentage
    min_color_temp: 2000
    max_color_temp: 5500
    sleep_brightness: 1
    sleep_color_temp: 1500
    # sunrise_time: "08:00:00"  # override the sunrise time
    # sunrise_offset: '00:00:00'
    # sunset_time:
    sunset_offset: '01:30:00'  # in seconds or '00:15:00'
    take_over_control: true
    detect_non_ha_changes: true
    only_once: false

  - name: "Bedroom"
    lights:
      - light.bed_right
      - light.bed_left
    prefer_rgb_color: false
    transition: 5  # seconds
    initial_transition: 5  # seconds
    interval: 90  # seconds
    min_brightness: 20  # percentage
    max_brightness: 100  # percentage
    min_color_temp: 2000
    max_color_temp: 5500
    sleep_brightness: 1
    sleep_color_temp: 1500
    # sunrise_time: "08:00:00"  # override the sunrise time
    # sunrise_offset: '00:00:00'
    # sunset_time:
    sunset_offset: '01:30:00'  # in seconds or '00:15:00'
    take_over_control: true
    detect_non_ha_changes: true
    only_once: false

automation:
  - alias: "Adaptive lighting: reset manual_control after 1 hour"
    mode: parallel
    trigger:
      platform: event
      event_type: adaptive_lighting.manual_control
    variables:
      light: "{{ trigger.event.data.entity_id }}"
      switch: "{{ trigger.event.data.switch }}"
    action:
      - delay: "01:00:00"
      - condition: template
        value_template: "{{ light in state_attr(switch, 'manual_control') }}"
      - service: adaptive_lighting.set_manual_control
        data:
          entity_id: "{{ switch }}"
          lights: "{{ light }}"
          manual_control: false
